#!/usr/bin/bash #

# testing.sh- This file will test whether histogram.c works
#
# input: None
# output: Whether histogram.c works
#
# usage: bash testing.sh
#
# Rushil Aramandla, ID# 1940008, raramand@ucsc.edu

#Compile the file
make
gcc -c histogram.c
gcc -o histogram histogram.o

#Check if compilation was successful
if [[ $? -ne 0 ]]; then
    echo "Compilation failed"
    exit 1
fi

#First Test

#Put first test output into output.txt
#I will use printf for the input because of how it handles white space differently than the echo command
printf "3 -4 5 1 7 0\n8 0 15 12 3 5\n3 3 3 3 3\n" | ./histogram > output.txt
#Print output text file
cat output.txt
16 bins of size 1 for range [0,16)
[  0:  0] **
[  1:  1] *
[  2:  2] 
[  3:  3] *******
[  4:  4] 
[  5:  5] **
[  6:  6] 
[  7:  7] *
[  8:  8] *
[  9:  9] 
[ 10: 10] 
[ 11: 11] 
[ 12: 12] *
[ 13: 13] 
[ 14: 14] 
[ 15: 15] *
#Create variable count that is equal to the # of asterisks in the text file
count=$(grep -o '*' output.txt | wc -l)
#If loop to check that count is equal to the correct # of asterisks: 16. If not test fails
if [ "$count" -eq 16 ]; then
	echo "First test passes based off # of asterisks- make sure to still eye check"
else
	echo "First test fails due to incorrect # of asterisks"
fi
First test passes based off # of asterisks- make sure to still eye check

#Second Test 

#Generating output
printf "3 -4 5 1 7 0\n8 0 15 12 3 5\n18 19 20 30 7 12\n50 34\n32\n19\n44\n" | ./histogram > output.txt
#Print output text file
cat output.txt
16 bins of size 1 for range [0,16)
16 bins of size 2 for range [0,32)
16 bins of size 4 for range [0,64)
[  0:  3] *****
[  4:  7] ****
[  8: 11] *
[ 12: 15] ***
[ 16: 19] ***
[ 20: 23] *
[ 24: 27] 
[ 28: 31] *
[ 32: 35] **
[ 36: 39] 
[ 40: 43] 
[ 44: 47] *
[ 48: 51] *
[ 52: 55] 
[ 56: 59] 
[ 60: 63] 
#Create variable count that is equal to the # of asterisks in the text file
count=$(grep -o '*' output.txt | wc -l)
#If loop to check that count is equal to the correct # of asterisks: 22. If not test fails
if [ "$count" -eq 22 ]; then
        echo "First resizing test passes based off # of asterisks- make sure to still eye check"
else
        echo "First resizing test fails due to incorrect # of asterisks"
fi
First resizing test passes based off # of asterisks- make sure to still eye check

#Third Test

#Generating output
printf "150\n" | ./histogram > output.txt
#Print output text file
cat output.txt
16 bins of size 1 for range [0,16)
16 bins of size 2 for range [0,32)
16 bins of size 4 for range [0,64)
16 bins of size 8 for range [0,128)
16 bins of size 16 for range [0,256)
[  0: 15] 
[ 16: 31] 
[ 32: 47] 
[ 48: 63] 
[ 64: 79] 
[ 80: 95] 
[ 96:111] 
[112:127] 
[128:143] 
[144:159] *
[160:175] 
[176:191] 
[192:207] 
[208:223] 
[224:239] 
[240:255] 
#Create variable count that is equal to the # of asterisks in the text file
count=$(grep -o '*' output.txt | wc -l)
#If loop to check that count is equal to the correct # of asterisks: 1. If not test fails
if [ "$count" -eq 1 ]; then
        echo "Second resizing test passes based off # of asterisks- make sure to still eye check"
else
        echo "Second resizing test fails due to incorrect # of asterisks"
fi
Second resizing test passes based off # of asterisks- make sure to still eye check




#Generating output
echo {1..16} 150 | ./histogram > output.txt
#Print output text file
cat output.txt
16 bins of size 1 for range [0,16)
16 bins of size 2 for range [0,32)
16 bins of size 4 for range [0,64)
16 bins of size 8 for range [0,128)
16 bins of size 16 for range [0,256)
[  0: 15] ***************
[ 16: 31] *
[ 32: 47] 
[ 48: 63] 
[ 64: 79] 
[ 80: 95] 
[ 96:111] 
[112:127] 
[128:143] 
[144:159] *
[160:175] 
[176:191] 
[192:207] 
[208:223] 
[224:239] 
[240:255] 
#Create variable count that is equal to the # of asterisks in the text file
count=$(grep -o '*' output.txt | wc -l)
#If loop to check that count is equal to the correct # of asterisks: 17. If not test fails
if [ "$count" -eq 17 ]; then
        echo "Last test passes based off # of asterisks- make sure to still eye check"
else
        echo "Last resizing test fails due to incorrect # of asterisks"
fi
Last test passes based off # of asterisks- make sure to still eye check



#Remove files
rm output.txt
make clean
rm -f histogram histogram.o
